// import { info } from 'console'
// import { lowerFirstLetter, upperFirstLetter } from '../utils/index'
import { coreFiles } from '../utils/files/core-files'
import { createTempFiles, fileExists, parseJson } from '../extends/file-manager'
import { resolve } from 'path'

// const { system } = require('gluegun')

module.exports = {
  name: 'create:backend:backup',
  description: 'Create the initial files of the application',
  run: async (toolbox) => {
    const {
      parameters,
      template,
      print: { success, error },
    } = toolbox

    const name: string = parameters.first ?? error('App name must be specified')

    // const module: string = parameters.second
    // let moduleNameUpper: string
    // let moduleNameLower: string

    // if (module) {
    //   moduleNameUpper = upperFirstLetter(module)
    //   moduleNameLower = lowerFirstLetter(module)

    //   coreFiles(name, moduleNameUpper, moduleNameLower).map(async (file) => {
    //     createTempFiles(template, file)
    //   })
    // }

    coreFiles(name).map(async (file) => {
      await createTempFiles(template, file)
      const fileTempJson = parseJson(resolve('temp', file.target))
      console.log(
        'ðŸš€ ~ file: create:backend-backup.ts ~ line 37 ~ coreFiles ~ fileTempJson',
        fileTempJson
      )

      const isFileUserExists = await fileExists(file)

      if (isFileUserExists) {
        console.log('File Exists')
      }
    })

    // info(`Run yarn install`)
    // await system.run(`cd ${name} && yarn`)

    // info(`Start git`)
    // await system.run(`
    //   cd ${name} &&
    //   git init &&
    //   git add . &&
    //   git commit -m "feat: add core layer" &&
    //   git branch -M main
    // `)

    // // if (urlRepo) {
    // //   await system.run(`
    // //     cd ${name} &&
    // //     git remote add origin ${urlRepo} &&
    // //     git push -u origin main
    // //   `)
    // // }

    // await system.run(`
    //   cd ${name} &&
    //   code .
    // `)
    success(`Generated ${name} app.`)
  },
}
